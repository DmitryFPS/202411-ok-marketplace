/*
 * SocialNetwork ${VERSION_APP}
 * It's a place where people communicate with each other
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.StoryCreateRequest;
import org.openapitools.client.model.StoryCreateResponse;
import org.openapitools.client.model.StoryDeleteRequest;
import org.openapitools.client.model.StoryDeleteResponse;
import org.openapitools.client.model.StoryFindRequest;
import org.openapitools.client.model.StoryFindResponse;
import org.openapitools.client.model.StoryReadRequest;
import org.openapitools.client.model.StoryReadResponse;
import org.openapitools.client.model.StoryUpdateRequest;
import org.openapitools.client.model.StoryUpdateResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StoryApi
 */
@Disabled
public class StoryApiTest {

    private final StoryApi api = new StoryApi();

    /**
     * Create story
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storyCreateTest() throws ApiException {
        StoryCreateRequest storyCreateRequest = null;
        StoryCreateResponse response = api.storyCreate(storyCreateRequest);
        // TODO: test validations
    }

    /**
     * Delete story
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storyDeleteTest() throws ApiException {
        StoryDeleteRequest storyDeleteRequest = null;
        StoryDeleteResponse response = api.storyDelete(storyDeleteRequest);
        // TODO: test validations
    }

    /**
     * Search story
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storyFindTest() throws ApiException {
        StoryFindRequest storyFindRequest = null;
        StoryFindResponse response = api.storyFind(storyFindRequest);
        // TODO: test validations
    }

    /**
     * Read story
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storyReadTest() throws ApiException {
        StoryReadRequest storyReadRequest = null;
        StoryReadResponse response = api.storyRead(storyReadRequest);
        // TODO: test validations
    }

    /**
     * Update story
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storyUpdateTest() throws ApiException {
        StoryUpdateRequest storyUpdateRequest = null;
        StoryUpdateResponse response = api.storyUpdate(storyUpdateRequest);
        // TODO: test validations
    }

}
